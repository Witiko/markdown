name: test & publish
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '30 4 * * MON'
env:
  DEBIAN_FRONTEND: noninteractive
jobs:
  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@1.1.0
  markdownlint:
    name: MarkdownLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run MarkdownLint
        uses: nosborn/github-action-markdown-cli@v2.0.0
        with:
          files: .
          config_file: .markdownlint.yaml
  test-and-publish:
    name: Test and publish
    needs:
      - shellcheck
      - markdownlint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        texlive:
          - TL2019-historic
          - TL2020-historic
          - TL2021-historic
          - latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Build Docker image
        run: make docker-image TEXLIVE_TAG=${{ matrix.texlive }}
      - name: Test Lua command-line interface
        run: |
          RESULT="$(printf '%s\n' 'Hello *Markdown*! $a_x + b_x = c_x$' |
                    docker run --rm -i witiko/markdown:${{ matrix.texlive }} markdown-cli hybrid=true underscores=false |
                    tee /dev/stderr)"
          test "$RESULT" = '\markdownRendererDocumentBegin'$'\n''Hello \markdownRendererEmphasis{Markdown}! $a_x + b_x = c_x$\markdownRendererDocumentEnd'
      - name: Run unit tests
        run: docker run -v "$PWD":/git-repo -w /git-repo witiko/markdown:${{ matrix.texlive }} make test
      - name: Build distribution archives
        run: docker run -v "$PWD":/git-repo -w /git-repo witiko/markdown:${{ matrix.texlive }} make dist gh-pages
      - name: Upload artifact markdown.tds.zip
        if: matrix.texlive == 'latest'
        uses: actions/upload-artifact@v2
        with:
          name: markdown.tds.zip
          path: markdown.tds.zip
      - name: Upload artifact markdown.ctan.zip
        if: matrix.texlive == 'latest'
        uses: actions/upload-artifact@v2
        with:
          name: markdown.ctan.zip
          path: markdown.ctan.zip
      - name: Upload artifact markdown.zip
        if: matrix.texlive == 'latest'
        uses: actions/upload-artifact@v2
        with:
          name: markdown.zip
          path: markdown.zip
      - name: Upload artifact markdown.pdf
        if: matrix.texlive == 'latest'
        uses: actions/upload-artifact@v2
        with:
          name: markdown.pdf
          path: markdown.pdf
      - name: Publish user manual
        if: github.ref == 'refs/heads/main' && matrix.texlive == 'latest'
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a prerelease
        if: github.ref == 'refs/heads/main' && matrix.texlive == 'latest'
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: The latest version
          automatic_release_tag: latest
          prerelease: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            markdown.tds.zip
            markdown.ctan.zip
            markdown.zip
            markdown.pdf
      - name: Authenticate registry
        if: github.ref == 'refs/heads/main'
        uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Publish Docker image
        if: github.ref == 'refs/heads/main'
        run: docker push witiko/markdown --all-tags
